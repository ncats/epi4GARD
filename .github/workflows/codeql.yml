
# Define the name of the workflow
name: "CodeQL"

# Define when the workflow should be triggered (on push to a specific branch and pull requests to the master branch)
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
#  schedule:
#    - cron: '29 11 * * 5'

# Define the jobs that will be executed as part of the workflow
jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on:
      group: ncats-onprem-internal-runners
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # Step 3: Autobuild the code.
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # Step 4: Analyzes the code using CodeQL, with the analysis category based on the matrix language.
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    # Step 5: Generate Security Report
    - name: Generate Security Report
      uses: rsdmike/github-security-report-action@v3.0.4
      with:
          token: ${{ secrets.GITHUB_TOKEN }}

    # Step 6: Uploads artifacts (PDF reports) generated during the workflow to download.
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with: 
          name: codeql-reports-${{ matrix.language }}
          path: ./*.pdf
